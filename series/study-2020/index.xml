<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Study 2020 on LeiShengxiao&#39;s Blog</title>
    <link>https://leishengxiao.github.io/series/study-2020/</link>
    <description>Recent content in Study 2020 on LeiShengxiao&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> All rights reserved.</copyright>
    <lastBuildDate>Mon, 10 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://leishengxiao.github.io/series/study-2020/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BackgroundWorker</title>
      <link>https://leishengxiao.github.io/posts/20200810-backgroundworker/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://leishengxiao.github.io/posts/20200810-backgroundworker/</guid>
      <description>声明BackgroundWorker变量  private BackgroundWorker backgroundWorker = new BackgroundWorker();  建立InitializeBackgroundWorker线程初始化方法  private void InitializeBackgroundWorker() { backgroundWorker.WorkerReportsProgress = true; backgroundWorker.WorkerSupportsCancellation = true; backgroundWorker.DoWork += new DoWorkEventHandler(backgroundWorker_DoWork); backgroundWorker.ProgressChanged += new ProgressChangedEventHandler(backgroundWorker_ProcessChanged); backgroundWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker_WorkerCompleted); }  在构造函数FormScan中调用初始化方法  public FormScan() { InitializeComponent(); InitializeBackgroundWorker(); }  建立backgroundWorker_DoWork执行方法  private void backgroundWorker_DoWork(object sender, DoWorkEventArgs e) { try { int intTimes = Convert.ToInt16(ceTestTimes.Value); int intPositions = axPoints.Length; int intTotalTimes = intTimes * intPositions; int intDid = 0; for (int i = 0; i &amp;lt; intTimes; i++) { for (int j = 0; j &amp;lt; intPositions; j++) { if (backgroundWorker.</description>
    </item>
    
    <item>
      <title>ComboBoxEdit</title>
      <link>https://leishengxiao.github.io/posts/20200810-comboboxedit/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://leishengxiao.github.io/posts/20200810-comboboxedit/</guid>
      <description>建立绑定用ComboBoxItemEntity实体类  public class ComboBoxItemEntity { private object _text = 0; private object _Value = &amp;#34;&amp;#34;; /// &amp;lt;summary&amp;gt;  /// 显示值  /// &amp;lt;/summary&amp;gt;  public object Text { get { return this._text; } set { this._text = value; } } /// &amp;lt;summary&amp;gt;  /// 对象值  /// &amp;lt;/summary&amp;gt;  public object Value { get { return this._Value; } set { this._Value = value; } } public override string ToString() { return this.</description>
    </item>
    
  </channel>
</rss>
